{
  "schemaVersion": 2,
  "dockerfileLines": [
                        "FROM ubuntu:18.04",
                        "RUN apt-get update -y",
                        "RUN apt-get install nodejs npm curl wget -y",
                        "RUN npm install -g n",
                        "RUN n 16",
                        "RUN npm install --global npm@latest",
                        "RUN apt-get install bash chromium-codecs-ffmpeg=97.0.4692.71-0ubuntu0.18.04.1 chromium-codecs-ffmpeg-extra=97.0.4692.71-0ubuntu0.18.04.1 dpkg libasound2 libatk-bridge2.0-0 libatk1.0-0 libatspi2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libdrm2 libexpat1 libgbm1 libgcc1 libglib2.0-0 libnspr4 libnss3 libpango-1.0-0 libwayland-client0 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxdamage1 libxext6 libxfixes3 libxkbcommon0 libxrandr2 libxtst6 xdg-utils -y",
                        "RUN wget http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-browser_97.0.4692.71-0ubuntu0.18.04.1_arm64.deb -O /tmp/chromium-browser_97.0.4692.71-0ubuntu0.18.04.1_arm64.deb",
                        "RUN dpkg -i /tmp/chromium-browser_97.0.4692.71-0ubuntu0.18.04.1_arm64.deb",
                        "RUN wget https://download.visualstudio.microsoft.com/download/pr/27840e8b-d61c-472d-8e11-c16784d40091/ae9780ccda4499405cf6f0924f6f036a/dotnet-sdk-5.0.100-linux-arm64.tar.gz -O /tmp/dotnet-sdk-5.0.100-linux-arm64.tar.gz",
                        "RUN mkdir /lib/dotnet-arm64 && tar zxf /tmp/dotnet-sdk-5.0.100-linux-arm64.tar.gz -C /lib/dotnet-arm64",
                        "ENV DOTNET_ROOT=/lib/dotnet-arm64",
                        "ENV PATH=/lib/dotnet-arm64:$PATH",
                        "ENV PATH=$PATH:/root/.dotnet/tools",
                        "RUN mkdir -p /usr/src/app",
                        "WORKDIR /usr/src/app",
                        "COPY ./package.json /usr/src/app/",
                        "RUN npm install && npm cache clean --force",
                        "RUN dotnet tool install --global retypeapp",
                        "COPY ./ /usr/src/app",
                        "ENV NODE_ENV production",
                        "ENV PORT 80",
                        "EXPOSE 80",
                        "RUN retype build",
                        "RUN ls -ls /snap/bin/",
                        "CMD node app.js"
                    ]
}